server:
  port: 7001

spring:
  profiles: dev001
  application:
    name: zuul-server
---
server:
  port: 7001

spring:
  profiles: dev001
  application:
    name: zuul-server001

# 注册中心配置
eureka:
  client:
    registerWithEureka: true # 服务注册，false表示不将自已注册到Eureka服务中
    fetchRegistry: true # 服务发现，false表示自己不从Eureka服务中获取注册信息
    serviceUrl:
      # # Eureka客户端与Eureka服务端的交互地址，集群版配置对方的地址，单机版配置自己（如果不配置则默认本机8761端口）
      # 单击版
      #      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      # 集群版  配置其他的Eureka Server服务端访问地址，有多个注册中心，用逗号隔开（这里是三台注册注册中心）
      defaultZone: http://eureka6001.com:6001/eureka/,http://eureka6002.com:6002/eureka/
  instance:
    instance-id: ${spring.application.name}:${server.port} # 指定实例ID,就不会显示主机名了
    prefer-ip-address: true # 访问路径可以显示IP地址


# 路由转发配置
zuul:
  routes:
    # 商品服务
    provider-product:   # 路由名称，名称任意，唯一
      path: /product/**   # 访问路径，（所有的/product 开头的请求都会转发到microservice-product服务）
      serviceId: microservice-product   # 指定服务ID，会自动从eureka中找到此服务的IP和端口
      # 代理转发时去掉前缀，false:代理转发时不去掉前缀
      # 例如:为true时，请求 /product/get/1，代理转发到/get/1
      stripPrefix: false


    # 如果多个服务需要经过路由，则同povider-product方式继续添加
    # 订单服务
    provider-order:
      path: /order/**
      serviceId: microservice-order
      stripPrefix: false

    # 库存服务
    provider-storage:
      path: /storage/**
      serviceId: microservice-storage
      stripPrefix: false


---
server:
  port: 7002

spring:
  profiles: dev002
  application:
    name: zuul-server002

# 注册中心配置
eureka:
  client:
    registerWithEureka: true # 服务注册，false表示不将自已注册到Eureka服务中
    fetchRegistry: true # 服务发现，false表示自己不从Eureka服务中获取注册信息
    serviceUrl:
      # # Eureka客户端与Eureka服务端的交互地址，集群版配置对方的地址，单机版配置自己（如果不配置则默认本机8761端口）
      # 单击版
      #      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      # 集群版  配置其他的Eureka Server服务端访问地址，有多个注册中心，用逗号隔开（这里是三台注册注册中心）
      defaultZone: http://eureka6001.com:6001/eureka/,http://eureka6002.com:6002/eureka/
  instance:
    instance-id: ${spring.application.name}:${server.port} # 指定实例ID,就不会显示主机名了
    prefer-ip-address: true # 访问路径可以显示IP地址


# 路由转发配置
zuul:
  routes:
    # 商品服务
    provider-product:   # 路由名称，名称任意，唯一
      path: /product/**   # 访问路径，（所有的/product 开头的请求都会转发到microservice-product服务）
      serviceId: microservice-product   # 指定服务ID，会自动从eureka中找到此服务的IP和端口
      # 代理转发时去掉前缀，false:代理转发时不去掉前缀
      # 例如:为true时，请求 /product/get/1，代理转发到/get/1
      stripPrefix: false

    # 如果多个服务需要经过路由，则同povider-product方式继续添加
    # 订单服务
    provider-order:
      path: /order/**
      serviceId: microservice-order
      stripPrefix: false

    # 库存服务
    provider-storage:
      path: /storage/**
      serviceId: microservice-storage
      stripPrefix: false

